{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","index.js","constants.js"],"names":["initialState","searchfield","Card","name","email","id","className","src","alt","CardList","robots","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","fetch","then","response","json","users","onSearchChange","filteredRobots","filter","robot","toLowerCase","includes","length","connect","dispatch","event","payload","target","value","store","createStore","action","Object","assign","ReactDOM","render","document","getElementById"],"mappings":"oPAEMA,G,YAAe,CACjBC,YAAa,K,oCCYFC,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAEzB,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACzD,6BACI,4BAAKL,GACL,2BAAIC,MCWLK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,6BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAQ,kBAAC,EAAD,CACJC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,aCE1BW,EAZG,SAAC,GAAkC,EAAhCd,YAAiC,IAApBe,EAAmB,EAAnBA,aAC9B,OACI,yBAAKV,UAAU,OACX,2BACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCAXI,G,MAPA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,YCgBJC,E,YAlBX,WAAYN,GAAQ,IAAD,8BACf,+CACKO,MAAQ,CACTC,UAAU,GAHC,E,+EAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAG1B,OAAIG,KAAKJ,MAAMC,SACJ,4DAEJG,KAAKX,MAAMK,a,GAfCQ,aCgBrBC,E,YACF,aAAe,IAAD,8BACV,+CACKP,MAAQ,CACTlB,OAAQ,IAHF,E,iFAOO,IAAD,OAChB0B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAAEvB,OAAQ8B,S,+BAKrC,IACE9B,EAAWsB,KAAKJ,MAAhBlB,OADH,EAEmCsB,KAAKX,MAArCpB,EAFH,EAEGA,YAAawC,EAFhB,EAEgBA,eACfC,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAAS7C,EAAY4C,kBAEzD,OAAQnC,EAAOqC,OAIP,yBAAKzC,UAAU,MACX,2CACA,kBAAC,EAAD,CAAWU,aAAcyB,IACzB,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAU/B,OAAQgC,OARlC,wBAAIpC,UAAU,MAAd,kB,GAvBM4B,aAuCHc,eAhDS,SAAApB,GACpB,MAAO,CACH3B,YAAa2B,EAAM3B,gBAIA,SAACgD,GACxB,MAAO,CAAER,eAAgB,SAACS,GAAD,OAAWD,ECfC,CACrChC,KAAM,sBACNkC,QDa4DD,EAAME,OAAOC,YAyC9DL,CAA6Cb,GE5CtDmB,EAAQC,aRPc,WAAwC,IAAvC3B,EAAsC,uDAA9B5B,EAAcwD,EAAgB,uDAAP,GACxD,OAAQA,EAAOvC,MACX,ISR2B,sBTSvB,OAAOwC,OAAOC,OAAO,GAAI9B,EAAO,CAAE3B,YAAauD,EAAOL,UAC1D,QACI,OAAOvB,MQInB+B,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OACSO,SAASC,eAAe,W","file":"static/js/main.c85bdccb.chunk.js","sourcesContent":["import { CHANGE_SEARCH_FIELD } from './constants';\r\n\r\nconst initialState = {\r\n    searchfield: ''\r\n}\r\n\r\nexport const searchRobots = (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, { searchfield: action.payload })\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='robots' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (<Card\r\n                        key={i}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                    />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search Robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '1px solid black', height: '800px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooooooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/Searchbox';\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport { setSearchField } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchfield: state.searchfield\r\n    }\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch) => {\r\n    return { onSearchChange: (event) => dispatch(setSearchField(event.target.value)) }\r\n}\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n    // onSearchChange = (event) => {\r\n    //     this.setState({ searchfield: event.target.value })\r\n    // };\r\n    render() {\r\n        const { robots } = this.state;\r\n        const { searchfield, onSearchChange } = this.props;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1 className='tc'>Loading...</h1> :\r\n            (\r\n\r\n                <div className='tc'>\r\n                    <h1>RoboFriends</h1>\r\n                    <SearchBox searchChange={onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div >\r\n            );\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, MapDispatchToProps)(App);","// import { CHANGE_SEARCH_FIELD } from './constants';\r\nexport const setSearchField = (text) => ({\r\n    type: 'CHANGE_SEARCH_FIELD',\r\n    payload: text\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\n// import Card from './Card';\nimport 'tachyons';\nimport { searchRobots } from './reducers';\n\n//import CardList from './CardList'\nimport App from './containers/App';\n// import * as serviceWorker from './serviceWorker';\n\nconst store = createStore(searchRobots)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'"],"sourceRoot":""}